#export CUDA_VISIBLE_DEVICES=0,2,3,5; python -W ignore imagenet.py --arch ResNet18_a4_w4 --data "/content/IMC-SRAM-Modeling/ImageNet_ResNet18_4-bit/TinyImageNet" --save "model" --evaluate "/content/drive/MyDrive/checkpoint/Model_with_69.11%_accuracy/Resnet18_model_a4_w4_tiny_imagenet_test_acc_tensor(69.1100, device='cuda:0')_.pth" --batch_size 256 --sd 170 --qb 64 --n9std 0.5 --n9mean 8.33 --adc_levels 16;
#export CUDA_VISIBLE_DEVICES=0,2,3,5; python -W ignore imagenet.py --arch ResNet18_a4_w4 --data "/content/IMC-SRAM-Modeling/ImageNet_ResNet18_4-bit/TinyImageNet" --batch_size 256 --epochs 120 --sd 170 --qb 64 --n9std 0.5 --n9mean 8.33 --adc_levels 16;
#export CUDA_VISIBLE_DEVICES=0,2,3,5; python -W ignore imagenet.py --arch MobileNet --data "/content/IMC-SRAM-Modeling/ImageNet_ResNet18_4-bit/TinyImageNet" --batch_size 256 --epochs 120 --sd 170 --qb 64 --n9std 0.5 --n9mean 8.33 --adc_levels 16;
#export CUDA_VISIBLE_DEVICES=0,2,3,5; python -W ignore main.py --arch VGGABN_a2_w2 --data "/content/IMC-SRAM-Modeling/ImageNet_ResNet18_4-bit/TinyImageNet" --batch_size 256 --epochs 120 --sd 170 --qb 64 --n9std 0.5 --n9mean 8.33 --adc_levels 16;
export CUDA_VISIBLE_DEVICES=0; python -W ignore imagenet.py --arch ResNet_multibit4bit --data "/content/IMC-SRAM-Modeling/ImageNet_ResNet18_4-bit/TinyImageNet"  --batch_size 128 --evaluate ./checkpoint/resnet18_w4_a4_4bit_eval/model_best.pth.tar 
#--sd 256 --qb 60 --pt probs/xnor_sram/prob_0p6_0p3_linear_chip4.mat --n9std 2.8 --n9mean -0.8;
# python main.py --arch ResNet18_a2_w2 --evaluate checkpoint/resnet18_a2_w2_prob.pth --sd 256 --qb 60
